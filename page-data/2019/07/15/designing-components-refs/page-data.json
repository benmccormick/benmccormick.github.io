{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2019/07/15/designing-components-refs",
    "result": {"data":{"markdownRemark":{"html":"<p>Good component design is one of the key skills for React developers.  Experience helps us create components that can be easily composed, are resilient to changing circumstances and intuitive to use.  There’s a lot of “art” involved here, but some aspects of creating good components are just knowing how to connect pieces together, and have components support common React features and patterns.  One of those features is refs.  So lets talk about how we can support refs in our components.</p>\n<h3>When Do You Need to Support Refs?</h3>\n<p>Refs are a React feature designed to make it possible for parent components to get direct access to DOM elements.  The classic use case here is allowing a parent component to <code class=\"language-text\">focus</code> a child input.  When the parent component renders the input directly, this is easy.  A simple “click button to focus input” component might look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ClickToFocus</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> inputRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">focusInput</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n### Different types <span class=\"token keyword\">of</span> refs\n\n### Adding refs support to a component\n\n</code></pre></div>","frontmatter":{"title":"Designing React Components: Supporting Refs","keywords":"","category":"frameworks","date":"2019/07/15","path":"/2019/07/15/designing-components-refs","layout":"post","hideFooter":null,"hideSidebar":null},"fields":{"slug":"/2019/07/15/designing-components-refs"}}},"pageContext":{"slug":"/2019/07/15/designing-components-refs","relatedPosts":[{"path":"/2019/02/11/reusable-react","data":{"title":"Reusable Code In React: Inheritance, Composition, Decorators and Mixins","path":"/2019/02/11/reusable-react","description":"How React uses multiple code sharing patterns to create a great developer experience","date":"2019/02/11","category":"fe-architecture"}},{"path":"/2019/01/07/the-concerns-of-fe-architecture/","data":{"title":"What's involved in Front End Architecture?","path":"/2019/01/07/the-concerns-of-fe-architecture/","description":"6 areas of interest in front end software design discussions","date":"2019/01/07","category":"fe-architecture"}},{"path":"/2018/02/07/react-confessions/","data":{"title":"React Architecture Confessions","path":"/2018/02/07/react-confessions/","description":"The mistakes I made while learning React and why I made them","date":"2018/02/07","category":"fe-architecture"}}]}},
    "staticQueryHashes": []}