{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016/06/26/quick-tip-take-advantage-of-lodash-collections-2","result":{"data":{"markdownRemark":{"html":"<p>One of the more frustrating things about using JavaScript in the browser is the number of different collection types that you need to deal with.  When using native APIs and 3rd party libraries, it’s easy to encounter 3 or more different types of collections, including <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/NodeList\">NodeLists</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection\">HTMLCollections</a>, <a href=\"https://learn.jquery.com/using-jquery-core/jquery-object/\">jQuery Objects</a>, and plain arrays.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\na instanceOf NodeList <span class=\"token comment\">//true</span>\n\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\nb instanceOf HTMLCollection <span class=\"token comment\">//true</span>\n\n<span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\nc instanceOf jQuery <span class=\"token comment\">// true</span>\n\n<span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'button1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'button2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'button3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nd instance <span class=\"token keyword\">of</span> Array <span class=\"token comment\">//true</span></code></pre></div>\n<p>This ends up mattering in practice because not every function that is available on Array is available on NodeList, HTMLCollections, and jQuery objects.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> ids <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Uncaught TypeError: document.querySelectorAll(...).map is not a function</span>\n\nids <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Uncaught TypeError: document.getElementsByTagName(...).map is not a function</span>\n\n<span class=\"token keyword\">let</span> numDivs <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">count<span class=\"token punctuation\">,</span> el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Uncaught TypeError: $(...).reduce is not a function</span></code></pre></div>\n<p>Since we can’t use native array methods on these alternate collections, we end up having to be very careful about knowing where we’ve retrieved data from, and how to convert those collections or how to work around their limitations.</p>\n<p>It’s useful to know about these distinctions, but in practice dealing with them is a pain.  One of the nice properties of <a href=\"https://lodash.com/docs\">lodash</a> is that it abstracts over these incompatibilities.  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> ids <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ['container', 'left-box', 'right-box']</span>\n\nids <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementssByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ['container', 'left-box', 'right-box']</span>\n\n<span class=\"token keyword\">let</span> numDivs <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">count<span class=\"token punctuation\">,</span> el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 3</span></code></pre></div>\n<p>For methods that iterate over a collection lodash treats all array-like objects (essentially anything with a length property) the same and iterates over their numerical properties from 0 to length-1.  This provides a nice consistency when working with DOM APIs and removes the mental overhead from managing their inconsistencies.  </p>","frontmatter":{"title":"Quick Tip: Take advantage of lodash collections","keywords":"lodash javascript collections arrays","category":"frameworks","date":"2016-06-26T21:27:55+00:00","path":"/2016/06/26/quick-tip-take-advantage-of-lodash-collections-2","layout":"post","hideFooter":null,"hideSidebar":null},"fields":{"slug":"/2016/06/26/quick-tip-take-advantage-of-lodash-collections-2"}}},"pageContext":{"slug":"/2016/06/26/quick-tip-take-advantage-of-lodash-collections-2","relatedPosts":[{"path":"/2016/05/02/digging-into-react-choosing-component-styles","data":{"title":"Digging Into React: Choosing Component Styles","path":"/2016/05/02/digging-into-react-choosing-component-styles","description":"An examination of the various styles for defining React components","date":"2016-05-02T02:32:36+00:00","category":"frameworks"}},{"path":"/2016/06/26/quick-tip-take-advantage-of-lodash-collections-2","data":{"title":"Quick Tip: Take advantage of lodash collections","path":"/2016/06/26/quick-tip-take-advantage-of-lodash-collections-2","description":"A quick look at the benefits of using lodash collection methods","date":"2016-06-26T21:27:55+00:00","category":"frameworks"}},{"path":"/2014/12/22/building-complex-layouts-with-marionette-js","data":{"title":"Building Complex Layouts With Marionette.js","path":"/2014/12/22/building-complex-layouts-with-marionette-js","description":"How to build complex UIs with Marionette.js","date":"2014-12-22T04:43:47+00:00","category":"frameworks"}}]}},"staticQueryHashes":[]}