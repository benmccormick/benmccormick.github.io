{"version":3,"sources":["webpack:///./src/pages/reviews-archive.js"],"names":["ReviewsArchive","render","posts","this","props","data","allMarkdownRemark","edges","sortedPosts","getSortedReviews","reviewRegex","ref","el","archiveContainer","keywords","pages","title","titleFn","page","get","path","result","exec","getReviewTitle","React","Component","pageQuery"],"mappings":"8QASMA,E,kGACJC,OAAA,WAAU,IAAD,OAEDC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CC,EAAcC,YAAiBP,GACjCQ,EAAc,oBAMlB,OACE,gBAAC,IAAD,KACE,uBAAKC,IAAK,SAAAC,GAAE,OAAK,EAAKC,iBAAmBD,IACvC,gBAAC,IAAD,CAAaE,SAAS,kEACtB,gBAAC,IAAD,CACEC,MAAOP,EACPQ,MAAM,eACNC,QAAS,SAAAC,GAAI,OAZA,SAAAA,GACnB,IAAIF,EAAQG,IAAID,EAAM,eAAiBA,EAAKE,KACxCC,EAASX,EAAYY,KAAKN,GAC9B,OAAOK,EAASA,EAAO,GAAKL,EASLO,CAAeL,S,GAlBfM,IAAMC,WA8BpBzB,YAER,IAAM0B,EAAS,c","file":"component---src-pages-reviews-archive-js-9d3f9920b9469b18d458.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { HeadContent } from '../components/HeadContent';\nimport { getSortedReviews } from '../utils/page-helpers';\nimport Layout from '../components/Layout';\nimport get from 'lodash/get';\nimport LinkList from '../components/LinkList';\n\nclass ReviewsArchive extends React.Component {\n  render() {\n    // Sort pages.\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const sortedPosts = getSortedReviews(posts);\n    let reviewRegex = /Book Review: (.+)/;\n    let getReviewTitle = page => {\n      let title = get(page, 'data.title') || page.path;\n      let result = reviewRegex.exec(title);\n      return result ? result[1] : title;\n    };\n    return (\n      <Layout>\n        <div ref={el => (this.archiveContainer = el)}>\n          <HeadContent keywords=\"blog,articles,posts,javascript,software tools,web development\" />\n          <LinkList\n            pages={sortedPosts}\n            title=\"Book Reviews\"\n            titleFn={page => getReviewTitle(page)}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nReviewsArchive.propTypes = {\n  route: PropTypes.object,\n};\n\nexport default ReviewsArchive;\n\nexport const pageQuery = graphql`\n  query ReviewsQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            layout\n            dontfeature\n            last30pageViews\n            pageViews\n            description\n            category\n            isDraft\n            amazonlink\n            image\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}