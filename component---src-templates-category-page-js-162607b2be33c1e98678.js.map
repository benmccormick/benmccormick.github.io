{"version":3,"file":"component---src-templates-category-page-js-162607b2be33c1e98678.js","mappings":"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AAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,KAAM,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,KAAM,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,IAG91EC,EAAQD,EAAIE,QAAO,SAACC,EAAKC,GAC7B,GAAY,OAARA,EAAc,OAAOD,EAAM,KAC/BA,EAAMA,GAAO,KAIb,IAHA,IAAIE,EAAaP,EAAMM,EAAI,IAAIE,MAAM,IAG5BpE,EAAI,EAAGA,EAAIkE,EAAI,GAAIlE,IAC1BiE,GAFAE,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWpE,SAInD,OAAOkE,IACN,IAEGO,EAAeV,EAClBtB,QAAO,SAAAiC,GAAC,OAAU,OAANA,KACZX,KACC,SAAAI,GAAG,eAAaL,EAAOK,EAAI,IAAxB,iDAGPQ,QAAQC,IAAR,mNAKE,cACA,KAEF,EAAAD,SAAQC,IAAR,SAAYZ,GAAZ,SAAsBS","sources":["webpack://benmccormick_org/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://benmccormick_org/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://benmccormick_org/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://benmccormick_org/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://benmccormick_org/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://benmccormick_org/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://benmccormick_org/./src/components/CategoryArchive.js","webpack://benmccormick_org/./src/templates/category-page.js","webpack://benmccormick_org/./src/utils/kusty.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import React from 'react';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport sortBy from 'lodash/sortBy';\n\nimport { HeadContent } from './HeadContent';\nimport LinkList from '../components/LinkList';\nimport categoryHash from '../pages/categories.json';\n\nclass CategoryArchive extends React.Component {\n  render() {\n    let { pages, categoryKey } = this.props;\n    let categoryData = find(categoryHash.categories, { key: categoryKey });\n    // Sort pages.\n    const sortedPages = sortBy(pages, page => get(page, 'data.date'))\n      .filter(\n        page =>\n          page.data.category === categoryKey &&\n          get(page, 'data.layout') === 'post'\n      )\n      .reverse();\n\n    let { description, title } = categoryData;\n\n    let titleText = `${title} Articles`;\n    return (\n      <div>\n        <HeadContent\n          title={`benmccormick.org - ${titleText}`}\n          keywords={`blog,articles,posts,${titleText}`}\n        />\n        <LinkList\n          pages={sortedPages}\n          title={titleText}\n          description={<p>{description}</p>}\n          showCategory={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CategoryArchive;\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport CategoryArchive from '../components/CategoryArchive';\nimport { getSortedPosts } from '../utils/page-helpers';\nimport Layout from '../components/Layout';\nimport '../utils/kusty';\n\nconst CategoryPage = ({ data, pageContext, history }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const sortedPosts = getSortedPosts(posts);\n  return (\n    <Layout history={history}>\n      <CategoryArchive pages={sortedPosts} categoryKey={pageContext.category} />\n    </Layout>\n  );\n};\n\nCategoryPage.propTypes = {\n  route: PropTypes.object,\n};\n\nexport default CategoryPage;\n\nexport const pageQuery = graphql`\n  query PostsByCategory {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            category\n            title\n            description\n            date\n            dontfeature\n            path\n            layout\n            key\n            isDraft\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","/* eslint-disable*/\n//we use these characters for the solid lines\nconst solidChars =\n  'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789+{}<>;';\n// and these ones for empty space\nconst spaceChars = \" `.,_-'\";\nconst chars = [spaceChars, solidChars];\nconst colors = ['#E0E0E0', '#ED6159', 'black'];\nconst map = [ [13, 0, 0], [45, 1, 1], [13, 0, 0], null, [9, 0, 0], [53, 1, 1], [9, 0, 0], null, [7, 0, 0], [57, 1, 1], [6, 0, 0], null, [5, 0, 0], [61, 1, 1], [5, 0, 0], null, [3, 0, 0], [17, 1, 1], [30, 0, 0], [18, 1, 1], [3, 0, 0], null, [2, 0, 0], [14, 1, 1], [39, 0, 0], [14, 1, 1], [2, 0, 0], null, [2, 0, 0], [10, 1, 1], [46, 0, 0], [12, 1, 1], [1, 0, 0], null, [1, 0, 0], [11, 1, 1], [49, 0, 0], [10, 1, 1], null, [10, 1, 1], [15, 0, 0], [7, 1, 2], [11, 0, 0], [7, 1, 2], [11, 0, 0], [10, 1, 1], null, [10, 1, 1], [13, 0, 0], [9, 1, 2], [9, 0, 0], [9, 1, 2], [11, 0, 0], [10, 1, 1], null, [9, 1, 1], [12, 0, 0], [10, 1, 2], [8, 0, 0], [10, 1, 2], [13, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [5, 1, 2], [13, 0, 0], [5, 1, 2], [18, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [5, 1, 2], [13, 0, 0], [5, 1, 2], [18, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [13, 0, 0], [27, 1, 2], [13, 0, 0], [9, 1, 1], null, [9, 1, 1], [14, 0, 0], [25, 1, 2], [14, 0, 0], [9, 1, 1], null, [9, 1, 1], [15, 0, 0], [23, 1, 2], [15, 0, 0], [9, 1, 1], null, [9, 1, 1], [18, 0, 0], [17, 1, 2], [18, 0, 0], [9, 1, 1], null, [1, 0, 0], [8, 1, 1], [21, 0, 0], [11, 1, 2], [21, 0, 0], [8, 1, 1], [1, 0, 0], null, [1, 0, 0], [11, 1, 1], [48, 0, 0], [11, 1, 1], [1, 0, 0], null, [3, 0, 0], [14, 1, 1], [38, 0, 0], [14, 1, 1], [3, 0, 0], null, [4, 0, 0], [18, 1, 1], [26, 0, 0], [20, 1, 1], [4, 0, 0], null, [5, 0, 0], [26, 1, 1], [13, 0, 0], [22, 1, 1], [6, 0, 0], null, [7, 0, 0], [27, 1, 1], [10, 0, 0], [20, 1, 1], [7, 0, 0], null, [9, 0, 0], [28, 1, 1], [7, 0, 0], [18, 1, 1], [7, 0, 0], null, [15, 0, 0], [24, 1, 1], [5, 0, 0], [15, 1, 1], [12, 0, 0], ]; \n\n// generate the ascii from the map\nconst ascii = map.reduce((agg, val) => {\n  if (val === null) return agg + '\\n';\n  agg = agg += '%c';\n  let characters = chars[val[1]].split('');\n  const randChar = () =>\n    characters[Math.floor(Math.random() * characters.length)];\n  for (let i = 0; i < val[0]; i++) {\n    agg += randChar();\n  }\n  return agg;\n}, '');\n\nconst colorStrings = map\n  .filter(x => x !== null)\n  .map(\n    val => `color:${colors[val[2]]}; font-family: monospace, font-weight: bold`\n  );\n\nconsole.log(\n  `I'm hiring React and Node developers @ Kustomer.  Please apply at http://tinyurl.com/kustomerjobs or reach out to me via email if interested\nYou can reach me by email at %cben@kustomer.com\n%cThanks! - Ben\n`,\n  'color: blue',\n  ''\n);\nconsole.log(ascii, ...colorStrings);\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","CategoryArchive","render","this","props","pages","categoryKey","categoryData","find","categoryHash","key","sortedPages","sortBy","page","get","filter","data","category","reverse","description","titleText","title","HeadContent","keywords","LinkList","showCategory","React","pageContext","history","posts","allMarkdownRemark","edges","sortedPosts","getSortedPosts","Layout","chars","colors","map","ascii","reduce","agg","val","characters","split","Math","floor","random","colorStrings","x","console","log"],"sourceRoot":""}