webpackJsonp([0xc51788ef1702],{774:function(e,t){e.exports={data:{markdownRemark:{html:'<div class="explanation">\nMarionette: Explained was a series of posts I wrote in winter 2014-2015 explaining the whats, whys and hows of Marionette, the Backbone Framework.  Marionette is a powerful set of patterns and components built on top of Backbone.js, a minimalist JavaScript MV* framework. It is widely used in the Backbone community, but since most of the resources I found about it were written prior to it\'s 2.0 version, and the framework had continued to evolve significantly since then, I felt there was a need for a detailed resource on using it.  This was my attempt at creating that resource.  Note that since I published this, Marionette has released a 3rd major version, Marionette 3.  Most of the concepts here still apply, but some specific syntax may be out of date.  \n</div>\n<ol>\n<li>\n<p><a href="http://benmccormick.org/2014/12/02/the-case-for-marionette-js/">The Case For Marionette.js</a> - A quick overview of what Marionette is and why it’s useful.</p>\n</li>\n<li>\n<p><a href="http://benmccormick.org/2014/12/10/marionette-explained-connecting-your-data-to-your-views/">Connecting Data To Your Views</a> - A look at Marionette’s approach to Views and data-binding</p>\n</li>\n<li>\n<p><a href="http://benmccormick.org/2014/12/22/building-complex-layouts-with-marionette-js/">Building Complex Layouts with Marionette.js</a> - A post to explain Marionette’s Regions and layout system, with a focus on complex nested layouts.</p>\n</li>\n<li>\n<p><a href="http://benmccormick.org/2015/01/05/marionette-view-life-cycles/">The Life of a Marionette View</a> - A rundown of the various stages of a Marionette View’s life cycle</p>\n</li>\n<li>\n<p><a href="http://benmccormick.org/2015/01/26/backbone-radio/">Building Modular Web Apps with Backbone.Radio</a> - This post examines how to use Backbone.Radio to improve the maintainability of your Marionette projects.</p>\n</li>\n</ol>\n<ol start="6">\n<li><a href="http://benmccormick.org/2015/03/23/staying-dry-with-marionette-behaviors/">Staying DRY with Marionette Behaviors</a> - A look at Behaviors and how they help you avoid repetition in your Backbone code.</li>\n</ol>\n<h3>Acknowledgements</h3>\n<p>I’ve had the opportunity to learn a lot from the Marionette team and community through their <a href="https://gitter.im/marionettejs/backbone.marionette">gitter room</a>. These posts have been much more accurate as a result. I also originally began to understand Marionette after reading <a href="https://leanpub.com/building-backbone-plugins?a=3a4Srv2pP9p87WQ_eoDoGp">Building Backbone Plugins</a> by Derick Bailey, the creator of Marionette. I highly recommend both of those resources to anyone interested in Marionette or Backbone development.</p>',frontmatter:{title:"Marionette: Explained",keywords:null,category:null,date:null,path:"/marionette-explained",layout:"page",hideFooter:!0},fields:{slug:"/marionette-explained"}}},pathContext:{slug:"/marionette-explained",relatedPosts:[{path:"/404.html",data:{title:"",path:"/404.html",description:null,date:null}},{path:"/learning-vim-in-2014",data:{title:"Learning Vim in 2014",path:"/learning-vim-in-2014",description:"A series of beginner level articles on Vim",date:null}},{path:"/marionette-explained",data:{title:"Marionette: Explained",path:"/marionette-explained",description:"A series of posts explaining Marionette.js",date:null}}]}}}});
//# sourceMappingURL=path---marionette-explained-3ae7cde22f42ff5a1e03.js.map