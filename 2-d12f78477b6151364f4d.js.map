{"version":3,"sources":["webpack:///./src/components/LinkList.js","webpack:///./src/components/CategoryTag.js","webpack:///./src/components/LinkBox.js","webpack:///./src/components/PageLink.js"],"names":["ListTitle","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","name","styles","List","LinkList","render","_this$props","this","props","pages","title","showCategory","showDate","showDescriptions","description","className","titleFn","showPopular","showTrending","useBox","pageLinks","map","page","Glamor","createElement","_LinkBox__WEBPACK_IMPORTED_MODULE_6__","key","path","_PageLink__WEBPACK_IMPORTED_MODULE_7__","showDescription","react__WEBPACK_IMPORTED_MODULE_3___default","a","Component","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_5___default","array","isRequired","string","node","bool","any","func","defaultProps","lodash_get__WEBPACK_IMPORTED_MODULE_4___default","__webpack_exports__","icons","beaker","_svg_beaker_svgi__WEBPACK_IMPORTED_MODULE_5___default","book","_svg_book_svgi__WEBPACK_IMPORTED_MODULE_6___default","browser","_svg_browser_svgi__WEBPACK_IMPORTED_MODULE_7___default","code","_svg_code_svgi__WEBPACK_IMPORTED_MODULE_8___default","globe","_svg_globe_svgi__WEBPACK_IMPORTED_MODULE_9___default","info","_svg_info_svgi__WEBPACK_IMPORTED_MODULE_11___default","megaphone","_svg_megaphone_svgi__WEBPACK_IMPORTED_MODULE_12___default","project","_svg_project_svgi__WEBPACK_IMPORTED_MODULE_13___default","tools","_svg_tools_svgi__WEBPACK_IMPORTED_MODULE_14___default","desktop","_svg_desktop_svgi__WEBPACK_IMPORTED_MODULE_16___default","organization","_svg_organization_svgi__WEBPACK_IMPORTED_MODULE_10___default","smiley","_svg_smiley_svgi__WEBPACK_IMPORTED_MODULE_17___default","CategoryName","IconWrapper","CategoryTag","category","categories","lodash_get__WEBPACK_IMPORTED_MODULE_19___default","_pages_categories_json__WEBPACK_IMPORTED_MODULE_18__","selectedCategory","lodash_find__WEBPACK_IMPORTED_MODULE_20___default","icon","_svg_question_svgi__WEBPACK_IMPORTED_MODULE_15___default","color","textColor","altColor","tag","glamor__WEBPACK_IMPORTED_MODULE_23__","fontFamily","_utils_typography__WEBPACK_IMPORTED_MODULE_24__","fontSize","background","display","flexDirection","justifyContent","alignItems","borderRadius","padding","width","height","&:hover","textDecoration","@media all and (max-width: 960px)","tagBuilder","gatsby__WEBPACK_IMPORTED_MODULE_22__","to","_Icon_js__WEBPACK_IMPORTED_MODULE_21__","dimensions","react__WEBPACK_IMPORTED_MODULE_4___default","prop_types__WEBPACK_IMPORTED_MODULE_3___default","includeText","boxClass","glamor__WEBPACK_IMPORTED_MODULE_14__","_utils_typography__WEBPACK_IMPORTED_MODULE_7__","margin","rhythm","transition","gridTemplateColumns","gridColumnGap","gridTemplateRows","boxShadow",":hover","@media all and (max-width: 700px)","gridRowGap","marginBottom","CategoryArea","PageDescription","opacity","DateContainer","TitleRow","LinkBox","_title","gatsby__WEBPACK_IMPORTED_MODULE_5__","date_fns_format__WEBPACK_IMPORTED_MODULE_8___default","date_fns_parse__WEBPACK_IMPORTED_MODULE_9___default","data","date","_CategoryTag__WEBPACK_IMPORTED_MODULE_13__","object","lodash_get__WEBPACK_IMPORTED_MODULE_6___default","TrendingIcon","_Icon__WEBPACK_IMPORTED_MODULE_11__","_svg_flame_svgi__WEBPACK_IMPORTED_MODULE_10___default","FavoriteIcon","_svg_star_svgi__WEBPACK_IMPORTED_MODULE_9___default","ListItem","_utils_typography__WEBPACK_IMPORTED_MODULE_6__","listStyle","PageWrapper","linkClass","glamor__WEBPACK_IMPORTED_MODULE_12__","whiteSpace","PageLink","isTrending","isPopular","date_fns_format__WEBPACK_IMPORTED_MODULE_7___default","date_fns_parse__WEBPACK_IMPORTED_MODULE_8___default"],"mappings":"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","file":"2-d12f78477b6151364f4d.js","sourcesContent":["import React from 'react';\nimport get from 'lodash/get';\nimport styled from \"@emotion/styled\";\n\nimport PropTypes from 'prop-types';\n\nimport LinkBox from './LinkBox';\nimport PageLink from './PageLink';\n\nconst ListTitle = styled(\"h2\")({\n  color: 'inherit',\n});\n\nconst List = styled(\"ul\")({\n  marginLeft: 0,\n  paddingLeft: 0,\n});\n\nclass LinkList extends React.Component {\n  render() {\n    let {\n      pages,\n      title,\n      showCategory,\n      showDate,\n      showDescriptions,\n      description,\n      className,\n      titleFn,\n      showPopular,\n      showTrending,\n      useBox,\n    } = this.props;\n    let pageLinks = pages.map(\n      page =>\n        useBox ? (\n          <LinkBox\n            key={page.path}\n            page={page}\n            showDate={showDate}\n            showCategory={showCategory}\n            titleFn={titleFn}\n          />\n        ) : (\n          <PageLink\n            page={page}\n            showCategory={showCategory}\n            key={page.path}\n            showDate={showDate}\n            showDescription={showDescriptions}\n            showPopular={showPopular}\n            showTrending={showTrending}\n            titleFn={titleFn}\n          />\n        )\n    );\n    return (\n      <div className={className}>\n        {title ? <ListTitle>{title}</ListTitle> : null}\n        {description || null}\n        <List>{pageLinks}</List>\n      </div>\n    );\n  }\n}\n\nLinkList.propTypes = {\n  pages: PropTypes.array.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.node,\n  showCategory: PropTypes.bool.isRequired,\n  showDate: PropTypes.bool.isRequired,\n  showPopular: PropTypes.bool.isRequired,\n  showTrending: PropTypes.bool.isRequired,\n  showDescriptions: PropTypes.bool.isRequired,\n  className: PropTypes.any.isRequired,\n  titleFn: PropTypes.func.isRequired,\n  useBox: PropTypes.bool.isRequired,\n};\n\nLinkList.defaultProps = {\n  showCategory: true,\n  showDate: true,\n  showDescriptions: true,\n  showPopular: false,\n  showTrending: false,\n  className: '',\n  useBox: false,\n  titleFn: page => get(page, 'data.title') || page.path,\n};\n\nexport default LinkList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport beaker from '../svg/beaker.svgi';\nimport book from '../svg/book.svgi';\nimport browser from '../svg/browser.svgi';\nimport code from '../svg/code.svgi';\nimport globe from '../svg/globe.svgi';\nimport organization from '../svg/organization.svgi';\nimport info from '../svg/info.svgi';\nimport megaphone from '../svg/megaphone.svgi';\nimport project from '../svg/project.svgi';\nimport tools from '../svg/tools.svgi';\nimport question from '../svg/question.svgi';\nimport desktop from '../svg/desktop.svgi';\nimport smiley from '../svg/smiley.svgi';\nimport categoryList from '../pages/categories.json';\nimport get from 'lodash/get';\nimport find from 'lodash/find';\nimport Icon from './Icon.js';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport { css } from 'glamor';\nimport { sansFontStack } from '../utils/typography';\n\nlet icons = {\n  beaker,\n  book,\n  browser,\n  code,\n  globe,\n  info,\n  megaphone,\n  project,\n  tools,\n  desktop,\n  organization,\n  smiley,\n};\n\nconst CategoryName = styled.div({\n  '&:hover': {\n    textDecoration: 'none',\n  },\n});\n\nconst tagBuilder = (color, textColor) => {\n  return css({\n    fontFamily: sansFontStack,\n    fontSize: '0.75rem',\n    background: color,\n    color: textColor,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    borderRadius: '0.25rem',\n    padding: '0.125rem 0.35rem',\n    width: '12rem',\n    height: '2rem',\n    '&:hover': {\n      textDecoration: 'none',\n    },\n    '@media all and (max-width: 960px)': {\n      height: '1.6rem',\n      width: '7rem',\n      fontSize: '0.55rem',\n    },\n  });\n};\n\nconst IconWrapper = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100%',\n  marginRight: '0.1rem',\n  '@media all and (max-width: 960px)': {\n    marginRight: 0,\n  },\n});\n\nclass CategoryTag extends React.Component {\n  render() {\n    let { category } = this.props;\n    let categories = get(categoryList, 'categories', []);\n    let selectedCategory = find(categories, { key: category });\n\n    let icon = selectedCategory ? icons[selectedCategory.icon] : question;\n    let color = selectedCategory ? selectedCategory.color : 'red';\n    let textColor =\n      selectedCategory && selectedCategory.altColor\n        ? selectedCategory.altColor\n        : 'rgba(256,256,256,1)';\n    let tag = tagBuilder(color, textColor);\n    let title = selectedCategory ? selectedCategory.title : 'Not Filed';\n    return (\n      <Link className={tag} to={`/category/${category}`}>\n        <IconWrapper>\n          <Icon icon={icon} color={textColor} dimensions={0.8} />\n        </IconWrapper>\n        <CategoryName>{title}</CategoryName>\n      </Link>\n    );\n  }\n}\n\nCategoryTag.propTypes = {\n  category: PropTypes.string.isRequired,\n  includeText: PropTypes.bool.isRequired,\n};\n\nCategoryTag.defaultProps = {\n  includeText: true,\n};\n\nexport default CategoryTag;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport get from 'lodash/get';\nimport typography from '../utils/typography';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport styled from '@emotion/styled';\nimport star from '../svg/star.svgi';\nimport flame from '../svg/flame.svgi';\nimport Icon from './Icon';\nimport CategoryTag from './CategoryTag';\nimport { css } from 'glamor';\nimport { sansFontStack, serifFontStack } from '../utils/typography';\n\nexport const TrendingIcon = () => <Icon color=\"#E55934\" icon={flame} />;\nexport const FavoriteIcon = () => <Icon color=\"#D7AF70\" icon={star} />;\n\nconst boxClass = css({\n  fontFamily: sansFontStack,\n  fontSize: '120%',\n  // 1px margin on the size in order to fix border on Safari\n  margin: `0 1px ${typography.rhythm(1 / 2)} 1px`,\n  color: 'initial',\n  background: '#FFFFFF',\n  transition: 'all 0.5s ease',\n  display: 'grid',\n  gridTemplateColumns: '67% 28%',\n  gridColumnGap: '5%',\n  gridTemplateRows: '5rem 1fr',\n  boxShadow: '0 1px 2px 0 rgba(43, 59, 93, 0.29)',\n  padding: '0 0.5rem 0.5rem 0.5rem',\n  ':hover': {\n    // background: '#F1684E',\n    // color: 'white',\n    textDecoration: 'none',\n    boxShadow: '0 10px 30px 0 rgba(0, 0, 0, 0.29)',\n  },\n  '@media all and (max-width: 700px)': {\n    gridTemplateColumns: '100%',\n    gridTemplateRows: 'auto auto auto auto',\n    gridRowGap: '0.5rem',\n    padding: '0.5rem',\n    marginBottom: `2rem`,\n  },\n});\n\nconst CategoryArea = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'flex-end',\n  alignItems: 'flex-end',\n  '@media all and (max-width: 700px)': {\n    justifyContent: 'flex-start',\n    marginTop: '1em',\n  },\n});\n\nconst PageDescription = styled('p')({\n  fontFamily: serifFontStack,\n  // fontStyle: 'italic',\n  opacity: '0.6',\n  fontSize: '18px',\n  margin: 0,\n  '@media all and (max-width: 700px)': {\n    fontSize: '70%',\n  },\n});\n\nconst DateContainer = styled('span')({\n  whiteSpace: 'nowrap',\n  display: 'flex',\n  fontSize: '18px',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  opacity: '0.6',\n  '@media all and (max-width: 700px)': {\n    display: 'none',\n  },\n});\n\nconst TitleRow = styled('h1')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: 0,\n  '> *': {\n    marginRight: '10px',\n  },\n  '@media all and (max-width: 700px)': {\n    fontSize: '80%',\n  },\n});\n\nclass LinkBox extends React.Component {\n  render() {\n    let { page, showDate, titleFn, showCategory } = this.props;\n    const _title = titleFn(page);\n    return (\n      <Link className={boxClass} to={page.path}>\n        <TitleRow>{_title}</TitleRow>\n        {showDate ? (\n          <DateContainer className=\"no-mobile\">\n            {format(parse(page.data.date), 'MMM Do YYYY')}\n          </DateContainer>\n        ) : (\n          <div />\n        )}\n        <PageDescription>{page.data.description}</PageDescription>\n        <CategoryArea>\n          {showCategory ? <CategoryTag category={page.data.category} /> : null}\n        </CategoryArea>\n      </Link>\n    );\n  }\n}\n\nLinkBox.propTypes = {\n  page: PropTypes.object.isRequired,\n  showDate: PropTypes.bool.isRequired,\n  showCategory: PropTypes.bool.isRequired,\n  titleFn: PropTypes.func.isRequired,\n};\n\nLinkBox.defaultProps = {\n  showDate: true,\n  showDescription: true,\n  showCategory: true,\n  titleFn: page => get(page, 'data.title') || page.path,\n};\n\nexport default LinkBox;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport typography from '../utils/typography';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport styled from '@emotion/styled';\nimport star from '../svg/star.svgi';\nimport flame from '../svg/flame.svgi';\nimport Icon from './Icon';\nimport { css } from 'glamor';\nimport { sansFontStack, serifFontStack } from '../utils/typography';\n\nexport const TrendingIcon = () => <Icon color=\"#E55934\" icon={flame} />;\nexport const FavoriteIcon = () => <Icon color=\"#D7AF70\" icon={star} />;\n\nconst ListItem = styled('li')({\n  marginBottom: typography.rhythm(1 / 2),\n  listStyle: 'none',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n});\n\nconst PageWrapper = styled('div')({\n  maxWidth: '50vw',\n  '@media all and (max-width: 700px)': {\n    maxWidth: '100vw',\n  },\n  display: 'flex',\n  alignItems: 'center',\n});\n\nconst linkClass = css({\n  boxShadow: 'none',\n  fontSize: '16px',\n  fontFamily: sansFontStack,\n  textDecoration: 'none',\n});\n\nconst PageDescription = styled('p')({\n  fontFamily: serifFontStack,\n  // fontStyle: 'italic',\n  fontSize: '16px',\n  margin: 0,\n  color: '#999999',\n});\n\nconst DateContainer = styled('span')({\n  fontFamily: serifFontStack,\n  whiteSpace: 'nowrap',\n  fontSize: '18px',\n  color: '#999999',\n});\n\nconst TitleRow = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  '> *': {\n    marginRight: '10px',\n  },\n});\n\nclass PageLink extends React.Component {\n  render() {\n    let {\n      page,\n      showDate,\n      showDescription,\n      titleFn,\n      showPopular,\n      showTrending,\n    } = this.props;\n    const _title = titleFn(page);\n    return (\n      <ListItem>\n        <PageWrapper>\n          <div>\n            <TitleRow>\n              <Link className={linkClass} to={page.path}>\n                {_title}\n              </Link>\n              {showTrending && page.data.isTrending ? <TrendingIcon /> : null}\n              {showPopular && page.data.isPopular ? <FavoriteIcon /> : null}\n            </TitleRow>\n            {showDescription ? (\n              <PageDescription>{page.data.description}</PageDescription>\n            ) : null}\n          </div>\n        </PageWrapper>\n        {showDate ? (\n          <DateContainer className=\"no-mobile\">\n            {format(parse(page.data.date), 'MMM Do YYYY')}\n          </DateContainer>\n        ) : null}\n      </ListItem>\n    );\n  }\n}\n\nPageLink.propTypes = {\n  page: PropTypes.object.isRequired,\n  showDate: PropTypes.bool.isRequired,\n  showCategory: PropTypes.bool.isRequired,\n  showDescription: PropTypes.bool.isRequired,\n  showPopular: PropTypes.bool.isRequired,\n  showTrending: PropTypes.bool.isRequired,\n  titleFn: PropTypes.func.isRequired,\n};\n\nPageLink.defaultProps = {\n  showCategory: true,\n  showDate: true,\n  showDescription: true,\n};\n\nexport default PageLink;\n"],"sourceRoot":""}