{"version":3,"sources":["webpack:///./src/pages/archive.js","webpack:///./node_modules/lodash/take.js","webpack:///./node_modules/lodash/sortBy.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/parseInt.js","webpack:///./node_modules/lodash/_baseValues.js","webpack:///./node_modules/lodash/values.js","webpack:///./node_modules/lodash/_strictIndexOf.js","webpack:///./node_modules/lodash/_baseIsNaN.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/includes.js","webpack:///./src/utils/page-helpers.js","webpack:///./node_modules/lodash/_isIterateeCall.js","webpack:///./node_modules/lodash/_compareAscending.js","webpack:///./node_modules/lodash/_compareMultiple.js","webpack:///./node_modules/lodash/_baseSortBy.js","webpack:///./node_modules/lodash/_baseOrderBy.js"],"names":["CategoryArchive","render","_this","this","posts","props","data","allMarkdownRemark","edges","sortedPosts","Object","_utils_page_helpers__WEBPACK_IMPORTED_MODULE_5__","Infinity","Glamor","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","ref","el","archiveContainer","_components_HeadContent__WEBPACK_IMPORTED_MODULE_4__","keywords","_components_LinkList__WEBPACK_IMPORTED_MODULE_6__","pages","title","showCategory","showPopular","showTrending","useBox","react__WEBPACK_IMPORTED_MODULE_3___default","a","Component","propTypes","route","prop_types__WEBPACK_IMPORTED_MODULE_2___default","object","__webpack_exports__","pageQuery","baseSlice","__webpack_require__","toInteger","module","exports","array","n","guard","length","undefined","baseFlatten","baseOrderBy","baseRest","isIterateeCall","sortBy","collection","iteratees","start","end","index","result","Array","root","toString","reTrimStart","nativeParseInt","parseInt","string","radix","replace","arrayMap","key","baseValues","keys","value","fromIndex","baseFindIndex","baseIsNaN","strictIndexOf","baseIndexOf","isArrayLike","isString","values","nativeMax","Math","max","indexOf","isDraft","page","lodash_get__WEBPACK_IMPORTED_MODULE_0___default","isEligiblePage","lodash_includes__WEBPACK_IMPORTED_MODULE_1___default","node","frontmatter","path","dontfeature","getSlug","p","getRecentPageViews","lodash_parseInt__WEBPACK_IMPORTED_MODULE_2___default","getPageViews","getPopularPosts","count","lodash_take__WEBPACK_IMPORTED_MODULE_4___default","lodash_sortBy__WEBPACK_IMPORTED_MODULE_3___default","reverse","filter","map","fields","slug","getSortedPosts","includeReviews","mostPopular","getSlugsForMostPopularPosts","trending","eligiblePages","rankByPopular","rankByRecentlyPopular","rankByTrending","getRankInList","list","lodash_findIndex__WEBPACK_IMPORTED_MODULE_5___default","popPage","getSlugsForTrendingPosts","pageTypes","push","Date","rawPage","isTrending","isPopular","getWeeklyLinks","getSortedReviews","getTopicLinks","topics","topic","eq","isIndex","isObject","type","isSymbol","other","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareAscending","orders","objCriteria","criteria","othCriteria","ordersLength","comparer","sort","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratee"],"mappings":"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","file":"component---src-pages-archive-js-d1b3d5a002da1c3501e1.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { HeadContent } from '../components/HeadContent';\nimport { getSortedPosts } from '../utils/page-helpers';\nimport LinkList from '../components/LinkList';\nimport Layout from '../components/Layout';\n\nclass CategoryArchive extends React.Component {\n  render() {\n    // Sort pages.\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const sortedPosts = getSortedPosts(posts, Infinity, true);\n    return (\n      <Layout>\n        <div ref={el => (this.archiveContainer = el)}>\n          <HeadContent keywords=\"blog,articles,posts,javascript,software tools,web development\" />\n          <LinkList\n            pages={sortedPosts}\n            title=\"Articles\"\n            showCategory={true}\n            showPopular={true}\n            showTrending={true}\n            useBox={true}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nCategoryArchive.propTypes = {\n  route: PropTypes.object,\n};\n\nexport default CategoryArchive;\n\nexport const pageQuery = graphql`\n  query ArchiveQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            layout\n            dontfeature\n            last30pageViews\n            pageViews\n            description\n            category\n            isDraft\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var root = require('./_root'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeParseInt = root.parseInt;\n\n/**\n * Converts `string` to an integer of the specified radix. If `radix` is\n * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n * hexadecimal, in which case a `radix` of `16` is used.\n *\n * **Note:** This method aligns with the\n * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category String\n * @param {string} string The string to convert.\n * @param {number} [radix=10] The radix to interpret `value` by.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.parseInt('08');\n * // => 8\n *\n * _.map(['6', '08', '10'], _.parseInt);\n * // => [6, 8, 10]\n */\nfunction parseInt(string, radix, guard) {\n  if (guard || radix == null) {\n    radix = 0;\n  } else if (radix) {\n    radix = +radix;\n  }\n  return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n}\n\nmodule.exports = parseInt;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","import get from 'lodash/get';\nimport includes from 'lodash/includes';\nimport parseInt from 'lodash/parseInt';\nimport sortBy from 'lodash/sortBy';\nimport take from 'lodash/take';\nimport findIndex from 'lodash/findIndex';\n\nconst isDraft = page => get(page, 'node.frontmatter.isDraft', false);\nconst isEligiblePage = page =>\n  !includes(page.node.frontmatter.path, '/404') &&\n  !page.node.frontmatter.dontfeature &&\n  get(page, 'node.frontmatter.layout') === 'post';\nconst getSlug = p => get(p, 'node.fields.slug');\nconst getRecentPageViews = page =>\n  parseInt(get(page, 'node.frontmatter.last30pageViews') || 0);\nconst getPageViews = page =>\n  parseInt(get(page, 'node.frontmatter.pageViews') || 0);\n\n// this gets a list of slugs for most popular all time posts\nexport const getSlugsForMostPopularPosts = (pages, count) =>\n  take(\n    sortBy(pages, getPageViews)\n      .reverse()\n      .filter(isEligiblePage)\n      .map(getSlug),\n    count\n  );\n\n// this gets a list of slugs for most recently popular posts\nexport const getSlugsForTrendingPosts = (pages, count) => {\n  let eligiblePages = pages\n    .filter(isEligiblePage)\n    // prevent cases where we're just moving up a deep pit at the bottom\n    .filter(page => getRecentPageViews(page) > 30)\n    // don't include things posted in the last 30 days\n    .filter(page => getRecentPageViews(page) !== getPageViews(page));\n  let rankByPopular = sortBy(pages, getPageViews);\n  let rankByRecentlyPopular = sortBy(eligiblePages, getRecentPageViews);\n  let rankByTrending = sortBy(eligiblePages, page => {\n    let getRankInList = list =>\n      findIndex(list, popPage => getSlug(popPage) === getSlug(page));\n    return getRankInList(rankByPopular) - getRankInList(rankByRecentlyPopular);\n  });\n  return take(rankByTrending.map(getSlug), count);\n};\n\n// this returns a list of popular posts, deprecated for now\nexport const getPopularPosts = (pages, count = Infinity) =>\n  take(\n    sortBy(pages, getRecentPageViews)\n      .reverse()\n      .filter(\n        page =>\n          !includes(page.node.frontmatter.path, '/404') &&\n          !page.node.frontmatter.dontfeature &&\n          !isDraft(page) &&\n          get(page, 'node.frontmatter.layout') === 'post'\n      )\n      .map(p => ({ data: p.node.frontmatter, path: p.node.fields.slug })),\n    count\n  );\n\nexport const getSortedPosts = (\n  pages,\n  count = Infinity,\n  includeReviews = false\n) => {\n  let mostPopular = getSlugsForMostPopularPosts(pages, 10);\n  let trending = getSlugsForTrendingPosts(pages, 10);\n  const buildPage = rawPage => {\n    let path = getSlug(rawPage);\n    let data = rawPage.node.frontmatter;\n    data.isTrending = includes(trending, path);\n    data.isPopular = includes(mostPopular, path);\n    return { data, path };\n  };\n  let pageTypes = ['post'];\n  if (includeReviews) {\n    pageTypes.push('review');\n  }\n  return take(\n    sortBy(pages, page => new Date(get(page, 'node.frontmatter.date')))\n      .reverse()\n      .filter(\n        page =>\n          includes(pageTypes, get(page, 'node.frontmatter.layout')) &&\n          !isDraft(page) &&\n          !get(page, 'node.frontmatter.dontfeature')\n      )\n      .map(buildPage),\n    count\n  );\n};\n\nexport const getWeeklyLinks = (pages, count = Infinity) =>\n  take(\n    sortBy(pages, page => get(page, 'node.frontmatter.date'))\n      .reverse()\n      .filter(page => get(page, 'node.frontmatter.layout') === 'weekly-links')\n      .map(p => ({ data: p.node.frontmatter, path: p.node.fields.slug })),\n    count\n  );\n\nexport const getSortedReviews = (pages, count = Infinity) =>\n  take(\n    sortBy(pages, page => get(page, 'node.frontmatter.date'))\n      .reverse()\n      .filter(\n        page =>\n          get(page, 'node.frontmatter.layout') === 'review' && !isDraft(page)\n      )\n\n      .map(p => ({ data: p.node.frontmatter, path: p.node.fields.slug })),\n    count\n  );\n\nexport const getTopicLinks = (topics, count = Infinity) =>\n  take(\n    topics.map(topic => ({ data: { title: topic }, path: `topics/${topic}` })),\n    count\n  );\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n"],"sourceRoot":""}