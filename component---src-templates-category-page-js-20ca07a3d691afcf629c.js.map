{"version":3,"sources":["webpack:///./src/components/CategoryArchive.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray/index.js","webpack:///./src/utils/kusty.js","webpack:///./src/templates/category-page.js"],"names":["CategoryArchive","render","this","props","pages","categoryKey","categoryData","find","categoryHash","categories","key","sortedPages","sortBy","page","get","filter","data","category","reverse","description","titleText","title","keywords","showCategory","React","Component","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","module","exports","arr","__esModule","chars","colors","map","ascii","reduce","agg","val","characters","split","i","Math","floor","random","length","colorStrings","x","console","log","CategoryPage","pageContext","history","posts","allMarkdownRemark","edges","sortedPosts","getSortedPosts"],"mappings":"iPASMA,G,4GACJC,OAAA,WAAU,IAAD,EACsBC,KAAKC,MAA5BC,EADC,EACDA,MAAOC,EADN,EACMA,YACTC,EAAeC,IAAKC,EAAaC,WAAY,CAAEC,IAAKL,IAElDM,EAAcC,IAAOR,GAAO,SAAAS,GAAI,OAAIC,IAAID,EAAM,gBACjDE,QACC,SAAAF,GAAI,OACFA,EAAKG,KAAKC,WAAaZ,GACM,SAA7BS,IAAID,EAAM,kBAEbK,UAEGC,EAAuBb,EAAvBa,YAEFC,EAFyBd,EAAVe,MAEN,YACb,OACE,2BACE,gBAAC,IAAD,CACEA,MAAK,sBAAwBD,EAC7BE,SAAQ,uBAAyBF,IAEnC,gBAAC,IAAD,CACEhB,MAAOO,EACPU,MAAOD,EACPD,YAAa,yBAAIA,GACjBI,cAAc,M,GA1BMC,IAAMC,YAiCrBzB,Q,2CC1Cf,IAAI0B,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhCC,EAAOC,QAJP,SAA4BC,GAC1B,OAAON,EAAkBM,IAAQL,EAAgBK,IAAQJ,EAA2BI,IAAQH,KAI9FC,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQE,YAAa,G,iDCXxE,IAIMC,EAAQ,CADK,UAFjB,uEAIIC,EAAS,CAAC,UAAW,UAAW,SAChCC,EAAM,CAAE,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,KAAM,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,KAAM,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,KAAM,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,IAG91EC,EAAQD,EAAIE,QAAO,SAACC,EAAKC,GAC7B,GAAY,OAARA,EAAc,OAAOD,EAAM,KAC/BA,EAAMA,GAAO,KAIb,IAHA,IAAIE,EAAaP,EAAMM,EAAI,IAAIE,MAAM,IAG5BC,EAAI,EAAGA,EAAIH,EAAI,GAAIG,IAC1BJ,GAFAE,EAAWG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,SAInD,OAAOR,IACN,IAEGS,EAAeZ,EAClBrB,QAAO,SAAAkC,GAAC,OAAU,OAANA,KACZb,KACC,SAAAI,GAAG,eAAaL,EAAOK,EAAI,IAAxB,iDAGPU,QAAQC,IAAR,mNAKE,cACA,KAEF,EAAAD,SAAQC,IAAR,SAAYd,GAAZ,SAAsBW,M,kCCnCtB,yFAoBeI,UAdM,SAAC,GAAoC,IAAlCpC,EAAiC,EAAjCA,KAAMqC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACnCC,EAAQvC,EAAKwC,kBAAkBC,MAC/BC,EAAcC,YAAeJ,GACnC,OACE,gBAAC,IAAD,CAAQD,QAASA,GACf,gBAAC,IAAD,CAAiBlD,MAAOsD,EAAarD,YAAagD,EAAYpC,c","file":"component---src-templates-category-page-js-20ca07a3d691afcf629c.js","sourcesContent":["import React from 'react';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport sortBy from 'lodash/sortBy';\n\nimport { HeadContent } from './HeadContent';\nimport LinkList from '../components/LinkList';\nimport categoryHash from '../pages/categories.json';\n\nclass CategoryArchive extends React.Component {\n  render() {\n    let { pages, categoryKey } = this.props;\n    let categoryData = find(categoryHash.categories, { key: categoryKey });\n    // Sort pages.\n    const sortedPages = sortBy(pages, page => get(page, 'data.date'))\n      .filter(\n        page =>\n          page.data.category === categoryKey &&\n          get(page, 'data.layout') === 'post'\n      )\n      .reverse();\n\n    let { description, title } = categoryData;\n\n    let titleText = `${title} Articles`;\n    return (\n      <div>\n        <HeadContent\n          title={`benmccormick.org - ${titleText}`}\n          keywords={`blog,articles,posts,${titleText}`}\n        />\n        <LinkList\n          pages={sortedPages}\n          title={titleText}\n          description={<p>{description}</p>}\n          showCategory={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CategoryArchive;\n","var arrayWithoutHoles = require(\"@babel/runtime/helpers/arrayWithoutHoles\");\n\nvar iterableToArray = require(\"@babel/runtime/helpers/iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"@babel/runtime/helpers/unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"@babel/runtime/helpers/nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/* eslint-disable*/\n//we use these characters for the solid lines\nconst solidChars =\n  'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789+{}<>;';\n// and these ones for empty space\nconst spaceChars = \" `.,_-'\";\nconst chars = [spaceChars, solidChars];\nconst colors = ['#E0E0E0', '#ED6159', 'black'];\nconst map = [ [13, 0, 0], [45, 1, 1], [13, 0, 0], null, [9, 0, 0], [53, 1, 1], [9, 0, 0], null, [7, 0, 0], [57, 1, 1], [6, 0, 0], null, [5, 0, 0], [61, 1, 1], [5, 0, 0], null, [3, 0, 0], [17, 1, 1], [30, 0, 0], [18, 1, 1], [3, 0, 0], null, [2, 0, 0], [14, 1, 1], [39, 0, 0], [14, 1, 1], [2, 0, 0], null, [2, 0, 0], [10, 1, 1], [46, 0, 0], [12, 1, 1], [1, 0, 0], null, [1, 0, 0], [11, 1, 1], [49, 0, 0], [10, 1, 1], null, [10, 1, 1], [15, 0, 0], [7, 1, 2], [11, 0, 0], [7, 1, 2], [11, 0, 0], [10, 1, 1], null, [10, 1, 1], [13, 0, 0], [9, 1, 2], [9, 0, 0], [9, 1, 2], [11, 0, 0], [10, 1, 1], null, [9, 1, 1], [12, 0, 0], [10, 1, 2], [8, 0, 0], [10, 1, 2], [13, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [5, 1, 2], [13, 0, 0], [5, 1, 2], [18, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [5, 1, 2], [13, 0, 0], [5, 1, 2], [18, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [12, 0, 0], [11, 1, 2], [7, 0, 0], [11, 1, 2], [12, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [53, 0, 0], [9, 1, 1], null, [9, 1, 1], [13, 0, 0], [27, 1, 2], [13, 0, 0], [9, 1, 1], null, [9, 1, 1], [14, 0, 0], [25, 1, 2], [14, 0, 0], [9, 1, 1], null, [9, 1, 1], [15, 0, 0], [23, 1, 2], [15, 0, 0], [9, 1, 1], null, [9, 1, 1], [18, 0, 0], [17, 1, 2], [18, 0, 0], [9, 1, 1], null, [1, 0, 0], [8, 1, 1], [21, 0, 0], [11, 1, 2], [21, 0, 0], [8, 1, 1], [1, 0, 0], null, [1, 0, 0], [11, 1, 1], [48, 0, 0], [11, 1, 1], [1, 0, 0], null, [3, 0, 0], [14, 1, 1], [38, 0, 0], [14, 1, 1], [3, 0, 0], null, [4, 0, 0], [18, 1, 1], [26, 0, 0], [20, 1, 1], [4, 0, 0], null, [5, 0, 0], [26, 1, 1], [13, 0, 0], [22, 1, 1], [6, 0, 0], null, [7, 0, 0], [27, 1, 1], [10, 0, 0], [20, 1, 1], [7, 0, 0], null, [9, 0, 0], [28, 1, 1], [7, 0, 0], [18, 1, 1], [7, 0, 0], null, [15, 0, 0], [24, 1, 1], [5, 0, 0], [15, 1, 1], [12, 0, 0], ]; \n\n// generate the ascii from the map\nconst ascii = map.reduce((agg, val) => {\n  if (val === null) return agg + '\\n';\n  agg = agg += '%c';\n  let characters = chars[val[1]].split('');\n  const randChar = () =>\n    characters[Math.floor(Math.random() * characters.length)];\n  for (let i = 0; i < val[0]; i++) {\n    agg += randChar();\n  }\n  return agg;\n}, '');\n\nconst colorStrings = map\n  .filter(x => x !== null)\n  .map(\n    val => `color:${colors[val[2]]}; font-family: monospace, font-weight: bold`\n  );\n\nconsole.log(\n  `I'm hiring React and Node developers @ Kustomer.  Please apply at http://tinyurl.com/kustomerjobs or reach out to me via email if interested\nYou can reach me by email at %cben@kustomer.com\n%cThanks! - Ben\n`,\n  'color: blue',\n  ''\n);\nconsole.log(ascii, ...colorStrings);\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport CategoryArchive from '../components/CategoryArchive';\nimport { getSortedPosts } from '../utils/page-helpers';\nimport Layout from '../components/Layout';\nimport '../utils/kusty';\n\nconst CategoryPage = ({ data, pageContext, history }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const sortedPosts = getSortedPosts(posts);\n  return (\n    <Layout history={history}>\n      <CategoryArchive pages={sortedPosts} categoryKey={pageContext.category} />\n    </Layout>\n  );\n};\n\nCategoryPage.propTypes = {\n  route: PropTypes.object,\n};\n\nexport default CategoryPage;\n\nexport const pageQuery = graphql`\n  query PostsByCategory {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            category\n            title\n            description\n            date\n            dontfeature\n            path\n            layout\n            key\n            isDraft\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}