{"data":{"markdownRemark":{"html":"<p>Thinking about how to structure this…</p>\n<p>For me I look at the requirements of showing a graph of 10 user icons with a color representing success/warning/error state and shading representing the coverage number and I break it down in my head like this:</p>\n<p>‌</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">What color should the icons be?\nHow many should be colored in?\nStarting from the left, how many fully colored icons do I need?\nDo I need a half after that?\nHow many neutral icons do I need to fill in the remainder</code></pre></div>\n<p>That’s our “algorithm” for this.</p>\n<p>If I was writing code and needed a guide on how to structure it, I might actually start by just writing this:</p>\n<p>‌</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCoverageIcons</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">coverage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// 1. What color should the icons be?</span>\n\n<span class=\"token comment\">// 2. How many should be colored in?</span>\n\n<span class=\"token comment\">// 3. Starting from the left, how many fully colored icons do I need?</span>\n\n<span class=\"token comment\">// 4. Do I need a half after that?</span>\n\n<span class=\"token comment\">// 5. How many neutral icons do I need to fill in the remainder</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>‌</p>\n<p>This type of “comment mocking” helps me when I’m dealing with an algorithm that I have trouble keeping straight in my head, especially if I think I might get interrupted while writing it.</p>\n<p>‌</p>\n<p>I’d probably fill it in like this:</p>\n<p>‌</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">GOOD</span> <span class=\"token operator\">=</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WARNING</span> <span class=\"token operator\">=</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCoverageIcons</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">coverage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// 1. What color should the icons be?</span>\n\n<span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">||</span> coverage <span class=\"token operator\">></span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant\">WARNING</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">GOOD</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. How many should be colored in?</span>\n\n<span class=\"token comment\">// 3. Starting from the left, how many fully colored icons do I need?</span>\n\n<span class=\"token comment\">// 4. Do I need a half after that?</span>\n\n<span class=\"token comment\">// 5. How many neutral icons do I need to fill in the remainder</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>‌</p>\n<p>Start just by saying “should the filled in ones be filled in Orange or Green? And again, like the status bar, don’t use the actual color names as variables since we could change those later but the concepts will probably stay the same.</p>\n<p>‌</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">GOOD</span> <span class=\"token operator\">=</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WARNING</span> <span class=\"token operator\">=</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCoverageIcons</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">coverage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// 1. What color should the icons be?</span>\n\n<span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">||</span> coverage <span class=\"token operator\">></span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant\">WARNING</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">GOOD</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. How many should be colored in?</span>\n\n<span class=\"token keyword\">let</span> countToColor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> floorNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  countToColor <span class=\"token operator\">=</span> floorNumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 3. Starting from the left, how many fully colored icons do I need?</span>\n\n<span class=\"token comment\">// 4. Do I need a half after that?</span>\n\n<span class=\"token comment\">// 5. How many neutral icons do I need to fill in the remainder</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So for step 2, we get the count that we need colored in. That’s the rounded down value of coverage divided by 10, plus 0, .5, or 1 depending on the remainder.</p>\n<p>‌</p>\n<p>‌</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">GOOD</span> <span class=\"token operator\">=</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WARNING</span> <span class=\"token operator\">=</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NEUTRAL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'neutral'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Icon</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">,</span> isHalf<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> classMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token constant\">GOOD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>orange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">NEUTRAL</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> gray<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> halfClassMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token constant\">GOOD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> half<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> orangeHalf<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>i className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>icon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>classMap<span class=\"token punctuation\">[</span>status<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isHalf <span class=\"token operator\">?</span> halfClassMap<span class=\"token punctuation\">[</span>status<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nIcon<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  status<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  isHalf<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>boolean\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCoverageIcons</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">coverage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// 1. What color should the icons be?</span>\n\n<span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">||</span> coverage <span class=\"token operator\">></span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant\">WARNING</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">GOOD</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. How many should be colored in?</span>\n\n<span class=\"token keyword\">let</span> countToColor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> floorNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  countToColor <span class=\"token operator\">=</span> floorNumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 3. Starting from the left, how many fully colored icons do I need?</span>\n<span class=\"token keyword\">let</span> icons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> countToColor<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  icons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Icon status<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span> half<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// 4. Do I need a half after that?</span>\n\n<span class=\"token comment\">// 5. How many neutral icons do I need to fill in the remainder</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>‌</p>\n<p>Ok this got a bit more complicated, but here we created an Icon component that takes our status and returns an <i/> with the appropriate classes. Since we have that, we can just iterate from 0 to countToColor and add Icons with our status.</p>\n<p>‌</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">GOOD</span> <span class=\"token operator\">=</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WARNING</span> <span class=\"token operator\">=</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NEUTRAL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'neutral'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Icon</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">,</span> isHalf<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> classMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token constant\">GOOD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>orange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">NEUTRAL</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> gray<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> halfClassMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token constant\">GOOD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> half<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> orangeHalf<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>i className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>icon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>classMap<span class=\"token punctuation\">[</span>status<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isHalf <span class=\"token operator\">?</span> halfClassMap<span class=\"token punctuation\">[</span>status<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nIcon<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  status<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  isHalf<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>boolean\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCoverageIcons</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">coverage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// 1. What color should the icons be?</span>\n\n<span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">||</span> coverage <span class=\"token operator\">></span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant\">WARNING</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">GOOD</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. How many should be colored in?</span>\n\n<span class=\"token keyword\">let</span> countToColor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> floorNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  countToColor <span class=\"token operator\">=</span> floorNumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 3. Starting from the left, how many fully colored icons do I need?</span>\n<span class=\"token keyword\">let</span> icons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> countToColor<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  icons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Icon status<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span> half<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// 4. Do I need a half after that?</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>countToColor <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   icons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Icon status<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span> half<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// 5. How many neutral icons do I need to fill in the remainder</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>‌</p>\n<p>This step is pretty simple, we just see if there was a half remainder in our countToColor and add the half if it exists.</p>\n<p>‌</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">GOOD</span> <span class=\"token operator\">=</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WARNING</span> <span class=\"token operator\">=</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NEUTRAL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'neutral'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Icon</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">,</span> isHalf<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> classMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token constant\">GOOD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>orange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">NEUTRAL</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> gray<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> halfClassMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token constant\">GOOD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> half<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">WARNING</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> orangeHalf<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>i className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>icon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>classMap<span class=\"token punctuation\">[</span>status<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isHalf <span class=\"token operator\">?</span> halfClassMap<span class=\"token punctuation\">[</span>status<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nIcon<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  status<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  isHalf<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>boolean\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCoverageIcons</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">coverage</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// 1. What color should the icons be?</span>\n\n<span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">||</span> coverage <span class=\"token operator\">></span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant\">WARNING</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">GOOD</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. How many should be colored in?</span>\n\n<span class=\"token keyword\">let</span> countToColor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> floorNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>coverage <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   countToColor <span class=\"token operator\">=</span> floorNumber <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  countToColor <span class=\"token operator\">=</span> floorNumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 3. Starting from the left, how many fully colored icons do I need?</span>\n<span class=\"token keyword\">let</span> icons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> countToColor<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  icons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Icon status<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span> half<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// 4. Do I need a half after that?</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>countToColor <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   icons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Icon status<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span> half<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// 5. How many neutral icons do I need to fill in the remainder</span>\n<span class=\"token keyword\">let</span> numRemaining <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>countToColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> numRemaining<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  icons<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Icon status<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Neutral<span class=\"token punctuation\">}</span> half<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> icons<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now we’ve put it all together, and things are working. Math.ceil here is just a round up (to the ceiling?) the opposite of Math.floor. Everything else in step 5 should be pretty self explanatory.</p>","frontmatter":{"title":"Everyday Algorithms","keywords":"","category":"software-productivity","date":"2018/09/17","path":"/2018/09/17/everyday-algorithms/","layout":"post","hideFooter":null,"hideSidebar":null},"fields":{"slug":"/2018/09/17/everyday-algorithms/"}}},"pageContext":{"slug":"/2018/09/17/everyday-algorithms/","relatedPosts":[{"path":"/2018/08/02/feedback-loops/","data":{"title":"Feedback Loops","path":"/2018/08/02/feedback-loops/","description":"How smaller loops lead to better software","date":"2018/08/02","category":"soft-skills"}},{"path":"/2017/07/19/ten-things-javascript/","data":{"title":"Ten Things A Serious JavaScript Developer Should Learn","path":"/2017/07/19/ten-things-javascript/","description":"Some of the important things to pick up in the JS world","date":"2017-07-19T04:00:00+00:00","category":"javascript"}},{"path":"/2018/02/07/react-confessions/","data":{"title":"React Architecture Confessions","path":"/2018/02/07/react-confessions/","description":"The mistakes I made while learning React and why I made them","date":"2018/02/07","category":"fe-architecture"}}]}}